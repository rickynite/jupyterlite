{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/application-extension/lib/index.js"],"names":["CommandIDs","WebSocketProvider","options","super","guid","ymodel","ydoc","Promise","resolve","lock","about","download","id","autoStart","requires","ITranslator","optional","ICommandPalette","IMainMenu","activate","app","translator","palette","menu","commands","trans","load","category","__","addCommand","label","name","execute","versionNumber","version","versionInfo","className","title","liteWordmark","height","width","externalLinks","href","target","rel","copyright","body","showDialog","buttons","Dialog","addItem","command","helpMenu","addGroup","provides","IDocumentProviderFactory","collaborative","PageConfig","ProviderMock","IDocumentManager","docManager","mainMenu","shell","isEnabled","currentWidget","contextForWidget","caption","current","context","element","document","createElement","encodeURIComponent","model","toString","path","appendChild","click","removeChild","fileMenu","ILabShell","labShell","logo","Widget","liteIcon","container","node","elementPosition","margin","add","rank","TranslationManager"],"mappings":"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","file":"6588.b096378f4f533020a22d.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ILabShell } from '@jupyterlab/application';\nimport { ICommandPalette, Dialog, showDialog } from '@jupyterlab/apputils';\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IDocumentProviderFactory, ProviderMock } from '@jupyterlab/docprovider';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator, TranslationManager } from '@jupyterlab/translation';\nimport { liteIcon, liteWordmark } from '@jupyterlite/ui-components';\nimport { Widget } from '@lumino/widgets';\nimport { WebsocketProvider } from 'y-websocket';\nimport React from 'react';\nconst YJS_WEBSOCKET_URL = 'wss://demos.yjs.dev';\nclass WebSocketProvider extends WebsocketProvider {\n    constructor(options) {\n        super(YJS_WEBSOCKET_URL, options.guid, options.ymodel.ydoc);\n    }\n    requestInitialContent() {\n        return Promise.resolve(true);\n    }\n    putInitializedState() {\n        // no-op\n    }\n    acquireLock() {\n        return Promise.resolve(0);\n    }\n    releaseLock(lock) {\n        // no-op\n    }\n}\n/**\n * The command IDs used by the application extension.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.about = 'application:about';\n    CommandIDs.download = 'docmanager:download';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Add a command to show an About dialog.\n */\nconst about = {\n    id: '@jupyterlite/application-extension:about',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [ICommandPalette, IMainMenu],\n    activate: (app, translator, palette, menu) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.about, {\n            label: trans.__('About %1', app.name),\n            execute: () => {\n                const versionNumber = trans.__('Version %1', app.version);\n                const versionInfo = (React.createElement(\"span\", { className: \"jp-About-version-info\" },\n                    React.createElement(\"span\", { className: \"jp-About-version\" }, versionNumber)));\n                const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                    React.createElement(\"div\", { className: \"jp-About-header-info\" },\n                        React.createElement(liteWordmark.react, { height: \"auto\", width: \"196px\" }),\n                        versionInfo)));\n                // Create the body of the about dialog\n                const jupyterliteURL = 'https://github.com/jtpio/jupyterlite';\n                const contributorsURL = 'https://github.com/jtpio/jupyterlite/graphs/contributors';\n                const externalLinks = (React.createElement(\"span\", { className: \"jp-About-externalLinks\" },\n                    React.createElement(\"a\", { href: contributorsURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('CONTRIBUTOR LIST')),\n                    React.createElement(\"a\", { href: jupyterliteURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('JUPYTERLITE ON GITHUB'))));\n                const copyright = (React.createElement(\"span\", { className: \"jp-About-copyright\" }, trans.__('Â© 2021 JupyterLite Contributors')));\n                const body = (React.createElement(\"div\", { className: \"jp-About-body\" },\n                    externalLinks,\n                    copyright));\n                return showDialog({\n                    title,\n                    body,\n                    buttons: [\n                        Dialog.createButton({\n                            label: trans.__('Dismiss'),\n                            className: 'jp-About-button jp-mod-reject jp-mod-styled'\n                        })\n                    ]\n                });\n            }\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.about, category });\n        }\n        if (menu) {\n            menu.helpMenu.addGroup([{ command: CommandIDs.about }], 0);\n        }\n    }\n};\n/**\n * An alternative document provider plugin\n */\nconst docProviderPlugin = {\n    id: '@jupyterlite/application-extension:docprovider',\n    provides: IDocumentProviderFactory,\n    activate: (app) => {\n        const collaborative = PageConfig.getOption('collaborative');\n        const factory = (options) => {\n            return collaborative ? new WebSocketProvider(options) : new ProviderMock();\n        };\n        return factory;\n    }\n};\n/**\n * A plugin providing download commands in the file menu and command palette.\n */\nconst downloadPlugin = {\n    id: '@jupyterlite/application-extension:download',\n    autoStart: true,\n    requires: [ITranslator, IDocumentManager],\n    optional: [ICommandPalette, IMainMenu],\n    activate: (app, translator, docManager, palette, mainMenu) => {\n        const trans = translator.load('jupyterlab');\n        const { commands, shell } = app;\n        const isEnabled = () => {\n            const { currentWidget } = shell;\n            return !!(currentWidget && docManager.contextForWidget(currentWidget));\n        };\n        commands.addCommand(CommandIDs.download, {\n            label: trans.__('Download'),\n            caption: trans.__('Download the file to your computer'),\n            isEnabled,\n            execute: () => {\n                // Checks that shell.currentWidget is valid:\n                const current = shell.currentWidget;\n                if (isEnabled() && current) {\n                    const context = docManager.contextForWidget(current);\n                    if (!context) {\n                        return showDialog({\n                            title: trans.__('Cannot Download'),\n                            body: trans.__('No context found for current widget!'),\n                            buttons: [Dialog.okButton({ label: trans.__('OK') })]\n                        });\n                    }\n                    const element = document.createElement('a');\n                    element.href = `data:text/json;charset=utf-8,${encodeURIComponent(context.model.toString())}`;\n                    element.download = context.path;\n                    document.body.appendChild(element);\n                    element.click();\n                    document.body.removeChild(element);\n                }\n            }\n        });\n        const category = trans.__('File Operations');\n        if (palette) {\n            palette.addItem({ command: CommandIDs.download, category });\n        }\n        if (mainMenu) {\n            mainMenu.fileMenu.addGroup([{ command: CommandIDs.download }], 6);\n        }\n    }\n};\n/**\n * The main application icon.\n */\nconst liteLogo = {\n    id: '@jupyterlite/application-extension:logo',\n    // marking as optional to not throw errors in retro\n    optional: [ILabShell],\n    autoStart: true,\n    activate: (app, labShell) => {\n        if (!labShell) {\n            return;\n        }\n        const logo = new Widget();\n        liteIcon.element({\n            container: logo.node,\n            elementPosition: 'center',\n            margin: '2px 2px 2px 8px',\n            height: 'auto',\n            width: '16px'\n        });\n        logo.id = 'jp-MainLogo';\n        labShell.add(logo, 'top', { rank: 0 });\n    }\n};\n/**\n * A simplified Translator\n */\nconst translator = {\n    id: '@jupyterlite/application-extension:translator',\n    activate: (app) => {\n        const translationManager = new TranslationManager();\n        return translationManager;\n    },\n    autoStart: true,\n    provides: ITranslator\n};\nconst plugins = [\n    about,\n    docProviderPlugin,\n    downloadPlugin,\n    liteLogo,\n    translator\n];\nexport default plugins;\n"],"sourceRoot":""}